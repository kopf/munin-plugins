#!/usr/bin/python
# Copyright (c) 2011
# Distilled Media Ltd.  All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 3. Neither the name of the author nor the names of any contributors to the
#    software may be used to endorse or promote products derived from this
#    software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

#
# Single core
# Monitors the number of documents on the core.
#

import sys
import os
import requests
from lxml import etree

SERVER = os.getenv('solr_server')
PORT = os.getenv('solr_port')
CORES = os.getenv('solr_cores')
if CORES:
	CORES = CORES.split(',')
AUTH = os.getenv('solr_auth')
if AUTH:
	AUTH = tuple(AUTH.split(':'))

def make_request(path):
    try:
        if AUTH:
            r = requests.get('http://%s:%s%s' %(SERVER, PORT, path),
                             auth=AUTH)
        else:
            r = requests.get('http://%s:%s%s' %(SERVER, PORT, path))
    except Exception, e:
        print e
        sys.exit(-1)
    if r.status_code != 200:
        return None
    return r.text

def process_data(data, core=None):
	if data:
		root = etree.fromstring(data)
		core = root.xpath('/solr/solr-info/CORE')

		for entry in core[0].xpath('entry'):
			if entry[0].text.strip() == 'searcher':
				stats = entry.xpath('stats')
				for stat in stats[0]:
					if stat.get("name") in ["numDocs"]:
						if core:
							print "%s.value %s" %(core, stat.text.strip())
						else:
							print "docs.value %s" % stat.text.strip()
							

if sys.argv[-1] == 'config':
	print "graph_title Solr Docs"
	print "graph_vlabel docs"
	if CORES:
		for core in CORES:
			print "%s.label %s" %(core, core)
			print "%s.info Number of documents in the %s core" %(core, core)
			print "%s.type GAUGE"
	else:
		print "docs.label Docs"
		print "docs.info Number of documents in the core"
		print "docs.type GAUGE"
	print "graph_category search"
else:
	if CORES:
		for core in CORES:
			data = make_request('/solr/%s/admin/stats.jsp' % core)
			process_data(data, core)
	else:
		data = make_request('/solr/admin/stats.jsp')
		process_data(data)

