#!/usr/bin/perl
# Copyright (c) 2011
# Distilled Media Ltd.  All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 3. Neither the name of the author nor the names of any contributors to the
#    software may be used to endorse or promote products derived from this
#    software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

#
# Monitors the status of a MySQL slave
#

use strict;
use warnings;

my $MYSQLADMIN = $ENV{'mysqladmin'} || 'mysqladmin';
my $MYSQLOPTS = $ENV{'mysqlopts'} || '';
my $COMMAND    = $MYSQLADMIN . ' ' . $MYSQLOPTS . ' extended-status';

if (@ARGV && $ARGV[0] eq "config") {
    print "graph_title MySQL Slave Status\n";
    print "graph_vlabel %\n";
    print "graph_category mysql\n";
    print "graph_total total\n";
    print "slavedown.label slave_down\n";
    print "slavedown.warning 0.5\n";
    print "slavedown.critical 1\n";
    exit;
}

my $slave_down = 0;
if (open(MYSQLADMIN, "$COMMAND |")) {
    my %mysqladmin;
    while (<MYSQLADMIN>) {
        chomp;
        if (/^\|\s+(.*?)\s+\|\s+(.*?)\s+\|$/o) {
            $mysqladmin{$1} = $2;
        }
    }
    close(MYSQLADMIN);

    if (%mysqladmin && $mysqladmin{'Slave_running'} ne 'ON') {
        $slave_down = 1;
    }
}

print "slavedown.value $slave_down\n";
